<link rel="stylesheet" href="~/css/Participant/manage.css">
@{
ViewBag.Title = "Katılımcı Yönetimi";
}
<div class="container">
    <div class="participant-management">
        <h2>Katılımcı Yönetimi</h2>
        <div class="form-group">
            <label for="maxParticipants">Maksimum Katılımcı Sayısı</label>
            <div class="input-group">
                <input type="number" class="form-control" id="maxParticipants" value="@ViewBag.MaxParticipants"
                    required>
                <button type="button" class="btn btn-primary"
                    onclick="updateMaxParticipants('@ViewBag.PostId', '@ViewBag.ConfirmedParticipants.Count')">Güncelle</button>
            </div>

        </div>

        <!-- Request List Section -->
        <div class="request-list">
            <h4>Bekleyen İstekler</h4>
            <ul class="list-group">
                @if(ViewBag.PendingParticipants.Count==0){
                <div class="alert alert-warning">Bekleyen İşlem Yok</div>
                }
                @foreach(var request in ViewBag.PendingParticipants){
                <!-- Repeat Request Items -->
                <li class="list-group-item">
                    <span>@request.UserName</span>
                    <div>
                        <button class="btn btn-accept btn-sm"
                            onclick="acceptRequest('@request.UserID','@request.PostID','@ViewBag.ConfirmedParticipants.Count','@ViewBag.MaxParticipants')">Kabul
                            Et</button>
                        <button class="btn btn-decline btn-sm"
                            onclick="declineRequest('@request.UserID','@request.PostID')">Reddet</button>
                    </div>
                </li>
                <!-- End Repeat -->}
            </ul>
        </div>

        <!-- Participant List Section -->
        <div class="participant-list">
            <h4>Mevcut Katılımcılar</h4>
            <ul class="list-group">
                <!-- Repeat Participant Items -->
                @if(ViewBag.ConfirmedParticipants.Count==0){
                <div class="alert alert-warning">Katılımcı Yok</div>
                }
                @foreach (var item in ViewBag.ConfirmedParticipants){
                <li class="list-group-item">
                    <span>@item.UserName</span>
                    <button class="btn btn-remove btn-sm"
                        onclick="removeParticipant('@item.ParticipantId')">Çıkar</button>
                </li>}

                <!-- End Repeat -->
            </ul>
        </div>
    </div>
</div>
@section Scripts{

<script>
    function updateMaxParticipants(postId, currentParticipantsCount) {
        var maxParticipants = document.getElementById('maxParticipants').value;

        if (maxParticipants < currentParticipantsCount) {
            alert('Maksimum katılımcı sayısı, mevcut katılımcı sayısından düşük olamaz. Lütfen önce bazı katılımcıları çıkarın.');
            return;
        }
        const formData = new FormData();
        formData.append('postId', postId);
        formData.append('maxParticipants', maxParticipants);
        fetch('@Url.Action("UpdateMaxParticipants","Participant")', {
            method: 'PUT',
            body: formData
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('Maksimum katılımcı sayısı başarıyla güncellendi.');
                    location.reload();
                } else {
                    alert('Maksimum katılımcı sayısı güncellenemedi.');
                }
            })
            .catch(error => console.error('Error:', error));
    }

    function acceptRequest(userId, postId, currentParticipantsCount, maxParticipants) {
        if (currentParticipantsCount >= maxParticipants) {
            alert('Maksimum katılımcı sayısına ulaşıldı. Daha fazla katılımcı kabul edilemez.');
            return;
        }

        fetch(`@Url.Action("Confirm", "Participant")?userId=${userId}&postId=${postId}`, {
            method: 'PUT',
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('İstek başarıyla kabul edildi.');
                    location.reload();
                } else {
                    alert('İstek kabul edilemedi.');
                }
            })
            .catch(error => console.error('Error:', error));
    }

    function declineRequest(userId, postId) {

        fetch(`@Url.Action("Decline","Participant")?userId=${userId}&postId=${postId}`, {
            method: 'PUT'

        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('İstek başarıyla reddedildi.');
                    location.reload(); // Sayfayı yenileyin
                } else {
                    alert('İstek reddedilemedi.');
                }
            })
            .catch(error => console.error('Error:', error));
    }

    function removeParticipant(participantId) {
        fetch('@Url.Action("Remove","Participant")?participantId=' + participantId, {
            method: 'DELETE',
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('Katılımcı başarıyla çıkarıldı.');
                    location.reload(); // Sayfayı yenileyin
                } else {
                    alert('Katılımcı çıkarılamadı.');
                }
            })
            .catch(error => console.error('Error:', error));
    }
</script>
}